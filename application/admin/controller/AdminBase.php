<?php
namespace app\admin\controller;
use app\admin\model\Menu;
use app\common\controller\Base;
use app\admin\model\User as UserModel;
use app\admin\model\Menu as MenuModel;
use think\facade\Config;
use think\Response;
use think\exception\HttpResponseException;
use think\Db;
use app\admin\model\Module as ModuleModel;
class AdminBase extends Base
{
    protected $curModule;
    protected $curController;
    protected $curAction;
   protected function initialize()
   {
       parent::initialize(); // TODO: Change the autogenerated stub

       if(!session('admin_id')){
           $this->redirect(url(self::$ADMIN_LOGIN_URL));
       }
       $this->curModule = strtolower(request()->module());
       $this->curController = strtolower(request()->controller());
       $this->curAction = strtolower(request()->action());
        //检查模块是否启用
        if(!ModuleModel::getModuleStatus($this->curModule)){
            $this->error('模块被禁用或不存在');
        }
        //检查权限
       if(!UserModel::check_auth($this->curModule,$this->curController,$this->curAction)){
           $this->error('没有此权限');
       }
       //某些链接不需要输出页面
       if(!MenuModel::noPublicAssign($this->curModule,$this->curController,$this->curAction)){
           $this->public_assign();
       }
   }

    protected function public_assign(){
        $admin = session('admin');
        /*获取当前链接的顶级id和次级id*/

        $tmp = MenuModel::topId_leftId($this->curModule,$this->curController,$this->curAction);

        /*获取顶部导航*/
        $topNav = MenuModel::getTopNav();

        MenuModel::filter_auth_menu($topNav,$admin);

        /*获取左边导航*/
        //$leftNav = Menu::getLeftNav($this->curModule);
        $leftNav = Menu::getLeftNav($this->curModule);

        MenuModel::filter_auth_menu($leftNav,$admin);

        //获取pageheader
        $map[] = ['m','=',$this->curModule];
        $map[] = ['c','=',$this->curController];
        $map[] = ['a','=',$this->curAction];
        $page_left = MenuModel::where($map)->find();
        $page_top = ['m'=>'','c'=>'','a'=>'','name'=>''];
        if($page_left && $page_left['parentid'])
            $page_top = MenuModel::where('id','=',$page_left['parentid'])->find();
        else if($page_left){
            $page_top = $page_left;
        }else{
            $page_left = ['name'=>''];
        }



        $this->assign([
            'topid'=>$tmp['topid'],
            'leftid'=>$tmp['leftid'],
            'page_top'=>$page_top,
            'page_left'=>$page_left,
            'topNav'=>$topNav,
            'leftNav'=>$leftNav,
            'curModule'=>$this->curModule,
            'curController'=>$this->curController,
            'curAction'=>$this->curAction
        ]);
    }

    /**
     * 输出json数据用
     * @param int $code
     * @param int $count
     * @param array $data
     * @param string $msg
     * @param array $header
     * @author yang
     * Date: 2022/5/23
     */
    public function echoJson($code=0,$count=0,$data=[],$msg='',$header=[]){
        $type = $this->getResponseType();
        $result = [
            'code'=>$code,
            'count'=>$count,
            'data'=>$data,
            'msg'=>$msg
        ];
        $response = Response::create($result, $type)->header($header);

        throw new HttpResponseException($response);
    }

}
